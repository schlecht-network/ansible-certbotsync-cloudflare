---
- name: "Ensure certbot is installed"
  become: true
  snap:
    name: certbot
    classic: yes
  
- name: "Trust certbot with root"
  become: true
  cmd: snap set certbot trust-plugin-with-root=ok
  
- name: "Ensure certbot-dns-cloudflare is installed"
  become: true
  snap:
    name: certbot-dns-cloudflare

- name: "Create symlink for certbot binary"
  ansible.builtin.file:
    src: /snap/bin/certbot
    dest: /usr/bin/certbot
    owner: root
    group: root
    state: link

- name: "Ensure Ansible is installed"
  become: true
  apt:
    name: ansible
    state: latest

- name: "Create Ansible playbook"
  become: true
  template:
    src: "certdistribution.yml.j2"
    dest: "/etc/ansible/{{ item.name }}_certdistribution.yml"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ certificates }}"

- name: "Create Ansible hostsfile"
  become: true
  template:
    src: "certdistribution_hosts.j2"
    dest: "/etc/ansible/{{ item.name }}_certdistribution_hosts"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ certificates }}"

- name: "Create /root/.secrets"
  become: true
  file:
    path: "/root/.secrets"
    state: directory
    owner: root
    group: root
    mode: '0600'

- name: "Create cloudflare configuration"
  become: true
  template:
    src: "cloudflare.ini.j2"
    dest: "/root/.secrets/{{ item.name }}_cloudflare.ini"
    owner: root
    group: root
    mode: '0600'
  loop: "{{ certificates }}"

- name: "Check if cert has already been requested"
  stat:
    path: "/etc/letsencrypt/{{ item.name }}_done"
  loop: "{{ certificates }}"
  register: check_done

- name: "Create posthook scripts"
  become: true
  template:
    src: "distributecerts.sh.j2"
    dest: "/etc/letsencrypt/{{ item.name }}_distributecerts.sh"
    owner: root
    group: root
    mode: '0744'
  loop: "{{ certificates }}"

- name: "Request cert"
  become: true
  shell: certbot certonly --dns-cloudflare --dns-cloudflare-credentials /root/.secrets/{{ item.item.name }}_cloudflare.ini -d {{ item.item.certbot_domains|join(',') }} --preferred-challenges dns-01 --post-hook /etc/letsencrypt/{{ item.item.name }}_distributecerts.sh --non-interactive --agree-tos -m {{ item.item.certbot_email }}
  loop: "{{ check_done.results }}"
  when: not item.stat.exists

- name: "Create done file"
  become: true
  file:
    path: "/etc/letsencrypt/{{ item.item.name }}_done"
    state: touch
    mode: '0644'
  loop: "{{ check_done.results }}"
  when: not item.stat.exists

- name: "Execute distribution script"
  become: true
  shell: "/etc/letsencrypt/{{ item.item.name }}_distributecerts.sh"
  loop: "{{ check_done.results }}"
  when: item.stat.exists

- name: "Ensure certbot timer is started/enabled"
  systemd:
    name: certbot.timer
    state: started
    enabled: yes